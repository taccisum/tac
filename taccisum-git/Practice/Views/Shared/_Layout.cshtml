@using System.Web.Optimization
@using Practice.ViewModels.Common
<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>@ViewBag.Title</title>

    @Styles.Render("~/bundles/css/core")
    @Styles.Render("~/bundles/css/icon-font")
    @Styles.Render("~/bundles/css/ace")
    @Styles.Render("~/bundles/css/jquery/plugins")
    @Styles.Render("~/bundles/css/common")
    @Scripts.Render("~/bundles/js/core")
    @Scripts.Render("~/bundles/js/ace")

    @* knockout *@
    <script src="/Scripts/Knockout/knockout-3.4.0.debug.js"></script>
    <script src="/Scripts/Knockout/plugin/knockout.mapping-latest.js"></script>

    @* requireJS *@
    <script type="text/javascript" src="~/Scripts/requireJS/require.js"></script>
    <script type="text/javascript" src="~/Scripts/Modules/Base/Config.js"></script>

    <style>
        .colorpick-div {
            margin: 5px 0;
        }
    </style>

    <script>
        window.debug = false;
        var sidebar;

        require(["base"]);
        require(["systools", "sidebar"], function (tool, sidebarManager) {
            var utility = {
                loadMenusFromServer: function(callback) {
                    tool.get("/CommonInfo/Menus", function (result) {
                        callback(result);
                    });
                },            //从服务器加载菜单数据

            }

            //menus搜索框
            function bindMenuSearcher(array) {
                var acArray = new List(array).divide(["ID", "Name", "Description"],
                ["value", "label", "desc"]).getArray();

                var $input = $("#menu-searcher").find("input");
                var $btn = $("#menu-searcher").find("button");

                tool.autocomplete("#menu-searcher input", {
                    source: acArray,
                    width: 168,
                    descFormatter: function (item) {
                        if ($.isNullOrEmptyString(item.desc)) {
                            return "";
                        } else {
                            return "desc: " + item.desc;
                        }
                    },
                });

                $btn.bind("click", function () {
                    var targetId = $input.attr("data-val");
                    sidebar.CollapseAll(false);
                    sidebar.Open(targetId, false);
                    //sidebar.PointAt(targetId);        //todo:: 未实现
                });
            }
            
            function init(menus) {
                sidebar = sidebarManager.getInstance(menus, "#nav-list");
                sidebar.Load();
                sidebar.Open(sidebar.CurrentMenuId(), true);
                bindMenuSearcher(menus);
            }

            function reload(menus) {
                if (sidebar && typeof sidebar.Clear == "function") {
                    sidebar.Clear();
                }
                sidebar = sidebarManager.newInstance(menus, "#nav-list");
                sidebar.Load();
                sidebar.Open(sidebar.CurrentMenuId(), true);
                bindMenuSearcher(menus);
                localStorage[SYS_MENUS] = JSON.stringify(menus);
            }

            //short cuts buttons事件
            function bindShortCuts() {
                $("#sidebar-shortcuts .btn-success").bind("click", function () {
                    utility.loadMenusFromServer(function (result) {
                        reload(result);
                    });
                });

                $("#sidebar-shortcuts .btn-info").bind("click", function () {
                    tool.dialog({
                        id: "dialog-chat",
                        content: "hello, let's chat~",
                        quickClose: true,

                    }).show(this);
                });
            }

            (function() {
                //初始化菜单
                var menusStr = localStorage[SYS_MENUS];
                var hasCache = false;
                if (menusStr) {
                    try {
                        var menus = JSON.parse(menusStr);
                        init(menus);
                        hasCache = true;
                    } catch (e) { }
                }

                if (!hasCache) {
                    utility.loadMenusFromServer(function(result) {
                        init(result);
                        localStorage[SYS_MENUS] = JSON.stringify(result);
                    });
                }

                bindShortCuts();
            })();
        });
    </script>

    @RenderSection("head", required: false)
</head>
<body class="skin-4">


@* navbar *@
<div class="navbar navbar-default">
    <div class="navbar-container">
    @Html.Partial("_PartialNavbar")
    </div>
</div>

<div class="main-container" id="main-container">
    @*sidebar*@
    <div class="main-container-inner">
        <a class="menu-toggler" id="menu-toggler" href="#">
            <span class="menu-text"></span>
        </a>
        <div class="sidebar" id="sidebar">
            @* short cuts *@
            <div class="sidebar-shortcuts" id="sidebar-shortcuts">
                <div class="sidebar-shortcuts-large">
                    <button class="btn btn-success" title="重新加载菜单数据"><i class="icon-refresh"></i></button>
                    <button class="btn btn-info"><i class="icon-comments"></i></button>
                    <button class="btn btn-warning"><i class="icon-globe"></i></button>
                    <button class="btn btn-danger"><i class="icon-home"></i></button>
                </div>
                <div class="sidebar-shortcuts-mini">
                    <span class="btn btn-success"></span>
                    <span class="btn btn-info"></span>
                    <span class="btn btn-warning"></span>
                    <span class="btn btn-danger"></span>
                </div>
            </div>

            <div class="sidebar-shortcuts">
                <div class="sidebar-shortcuts-large" style="line-height: 34px;"> @*设置line-height修正ace style造成的样式错乱*@
                    @* menu searcher *@
                    <div id="menu-searcher" class="input-group input-group-merge" style="padding: 3px 6px;">
                        <input class="form-control input-md left" type="text"/>
                        <span class="input-group-btn right" style="margin: 0"><button class="btn btn-white btn-md">&nbsp;<i class="icon-map-marker"></i></button></span>
                    </div>
                </div>
                <div class="sidebar-shortcuts-mini">
                </div>
            </div>


            @* nav list *@
            <ul class="nav nav-list" id="nav-list">

            </ul>
            <div class="sidebar-collapse" id="sidebar-collapse">
                <i class="icon-double-angle-left" data-icon1="icon-double-angle-left" data-icon2="icon-double-angle-right"></i>
            </div>
        </div>
        <div class="main-content">
            <div class="breadcrumbs">
                <ul class="breadcrumb">
                   <i class="@Html.Raw(ViewBag.Crumbs.Icon ?? "icon-home") home-icon"></i>
                    @foreach (CrumbPath path in ViewBag.Crumbs.Paths)
                    {
                        if (path.IsLink)
                        {
                            <li><a href="@path.Href">@path.Name</a></li>
                        }
                        else
                        {
                            <li>@path.Name</li>
                        }
                    }
                </ul>
            </div>
            <div id="page-content" class="page-content">
                <div id="area-operation" class="area-operation">
                    <div id="area-tips" class="area-tips area-info alert alert-success" style="display: none;">
                        @RenderSection("tips", required: false)
                    </div>
                    <div id="area-parameters" class="area-parameters area-param alert alert-info" style="display: none;">
                        @RenderSection("parameters", required: false)
                    </div>
                    <div id="area-button" class="area-button" style="display: none;">
                        @RenderSection("buttons", required: false)
                    </div>
                </div>
                <div id="area-display" class="area-display">
                    @RenderBody()
                </div>

            </div>
        </div>
    </div>
</div>

    @* autocomplete container，删了无法正常使用jq_autocomplete *@
    <div id="jq-ui-autocomplete-container"></div>
</body>
</html>
